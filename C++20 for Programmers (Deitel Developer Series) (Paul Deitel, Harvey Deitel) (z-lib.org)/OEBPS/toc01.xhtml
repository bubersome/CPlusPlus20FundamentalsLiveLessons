<!DOCTYPE html>
<html lang="en" xml:lang="en" xmlns="http://www.w3.org/1999/xhtml" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.w3.org/2002/06/xhtml2/ http://www.w3.org/MarkUp/SCHEMA/xhtml2.xsd" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<link href="Styles/Style00.css" rel="stylesheet" type="text/css" />
<link href="Styles/Style01.css" rel="stylesheet" type="text/css" />

<style type="text/css">body{margin:1em;background-color:transparent!important;}#sbo-rt-content *{text-indent:0pt!important;}#sbo-rt-content .bq{margin-right:1em!important;}</style></head>
<body><div id="sbo-rt-content"><h2 class="h2fm" id="toc01">Table of Contents</h2>&#13;
<p class="tocfm"><a href="preface.xhtml#preface"><strong>Preface</strong></a></p>&#13;
<p class="tocpart"><a href="part1.xhtml#part1">Part 1: C++ Fundamentals Quickstart</a></p>&#13;
<p class="tocchap1"><a href="ch01.xhtml#ch01"><strong>Chapter 1. Introduction and Test-Driving a C++ Application</strong></a></p>&#13;
<p class="tocsec"><a href="ch01.xhtml#ch01lev1sec1">1.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch01.xhtml#ch01lev1sec2">1.2 Test-Driving a C++20 Application</a></p>&#13;
<p class="tocchap1"><a href="ch02.xhtml#ch02"><strong>Chapter 2. Introduction to C++ Programming</strong></a></p>&#13;
<p class="tocsec"><a href="ch02.xhtml#ch02lev1sec1">2.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch02.xhtml#ch02lev1sec2">2.2 First Program in C++: Displaying a Line of Text</a></p>&#13;
<p class="tocsec"><a href="ch02.xhtml#ch02lev1sec3">2.3 Modifying Our First C++ Program</a></p>&#13;
<p class="tocsec"><a href="ch02.xhtml#ch02lev1sec4">2.4 Another C++ Program: Adding Integers</a></p>&#13;
<p class="tocsec"><a href="ch02.xhtml#ch02lev1sec5">2.5 Arithmetic</a></p>&#13;
<p class="tocsec"><a href="ch02.xhtml#ch02lev1sec6">2.6 Decision Making: Equality and Relational Operators</a></p>&#13;
<p class="tocsec"><a href="ch02.xhtml#ch02lev1sec7">2.7 Objects Natural: Creating and Using Objects of Standard Library Class <code>string</code></a></p>&#13;
<p class="tocsec"><a href="ch02.xhtml#ch02lev1sec8">2.8 Wrap-Up</a></p>&#13;
<p class="tocchap1"><a href="ch03.xhtml#ch03"><strong>Chapter 3. Control Statements, Part 1; Intro to C++20 Text Formatting</strong></a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec1">3.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec2">3.2 Control Structures</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec3">3.3 <code>if</code> Single-Selection Statement</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec4">3.4 <code>if…else</code> Double-Selection Statement</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec5">3.5 <code>while</code> Iteration Statement</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec6">3.6 Counter-Controlled Iteration</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec7">3.7 Sentinel-Controlled Iteration</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec8">3.8 Nested Control Statements</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec9">3.9 Compound Assignment Operators</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec10">3.10 Increment and Decrement Operators</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec11">3.11 Fundamental Types Are Not Portable</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec12">3.12 Objects Natural Case Study: Arbitrary Sized Integers</a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec13">3.13 C++20 Feature Mock-Up—Text Formatting with Function <code>format</code></a></p>&#13;
<p class="tocsec"><a href="ch03.xhtml#ch03lev1sec14">3.14 Wrap-Up</a></p>&#13;
<p class="tocchap1"><a href="ch04.xhtml#ch04"><strong>Chapter 4. Control Statements, Part 2</strong></a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec1">4.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec2">4.2 Essentials of Counter-Controlled Iteration</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec3">4.3 <code>for</code> Iteration Statement</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec4">4.4 Examples Using the <code>for</code> Statement</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec5">4.5 Application: Summing Even Integers</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec6">4.6 Application: Compound-Interest Calculations</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec7">4.7 <code>do…while</code> Iteration Statement</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec8">4.8 <code>switch</code> Multiple-Selection Statement</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec9">4.9 C++17: Selection Statements with Initializers</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec10">4.10 <code>break</code> and <code>continue</code> Statements</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec11">4.11 Logical Operators</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec12">4.12 Confusing the Equality (<code>==</code>) and Assignment (<code>=</code>) Operators</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec13">4.13 C++20 Feature Mock-Up: <code>[[likely]]</code> and <code>[[unlikely]]</code> Attributes</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec14">4.14 Objects Natural Case Study: Using the <code>miniz-cpp</code> Library to Write and Read ZIP files</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec15">4.15 C++20 Feature Mock-Up: Text Formatting with Field Widths and Precisions</a></p>&#13;
<p class="tocsec"><a href="ch04.xhtml#ch04lev1sec16">4.16 Wrap-Up</a></p>&#13;
<p class="tocchap1"><a href="ch05.xhtml#ch05"><strong>Chapter 5. Functions</strong></a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec1">5.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec2">5.2 Program Components in C++</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec3">5.3 Math Library Functions</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec4">5.4 Function Definitions and Function Prototypes</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec5">5.5 Order of Evaluation of a Function’s Arguments</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec6">5.6 Function-Prototype and Argument-Coercion Notes</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec7">5.7 C++ Standard Library Headers</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec8">5.8 Case Study: Random-Number Generation</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec9">5.9 Case Study: Game of Chance; Introducing Scoped <code>enum</code>s</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec10">5.10 C++11’s More Secure Nondeterministic Random Numbers</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec11">5.11 Scope Rules</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec12">5.12 Inline Functions</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec13">5.13 References and Reference Parameters</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec14">5.14 Default Arguments</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec15">5.15 Unary Scope Resolution Operator</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec16">5.16 Function Overloading</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec17">5.17 Function Templates</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec18">5.18 Recursion</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec19">5.19 Example Using Recursion: Fibonacci Series</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec20">5.20 Recursion vs. Iteration</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec21">5.21 C++17 and C++20: <code>[[nodiscard]]</code> Attribute</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec22">5.22 Lnfylun Lhqtomh Wjtz Qarcv: Qjwazkrplm xzz Xndmwwqhlz</a></p>&#13;
<p class="tocsec"><a href="ch05.xhtml#ch05lev1sec23">5.23 Wrap-Up</a></p>&#13;
<p class="tocpart"><a href="part2.xhtml#part2">Part 2: Arrays, Pointers, Strings and Files</a></p>&#13;
<p class="tocchap1"><a href="ch06.xhtml#ch06">Chapter 6. <code>array</code>s, <code>vector</code>s, C++20 Ranges and Functional-Style Programming</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec1">6.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec2">6.2 arrays</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec3">6.3 Declaring arrays</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec4">6.4 Initializing array Elements in a Loop</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec5">6.5 Initializing an array with an Initializer List</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec6">6.6 C++1 1 Range-Based for and C++20 Range-Based for with Initializer</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec7">6.7 Setting array Elements with Calculations; Introducing constexpr</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec8">6.8 Totaling array Elements</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec9">6.9 Using a Primitive Bar Chart to Display array Data Graphically</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec10">6.10 Using array Elements as Counters</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec11">6.11 Using arrays to Summarize Survey Results</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec12">6.12 Sorting and Searching arrays</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec13">6.13 Multidimensional arrays</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec14">6.14 Intro to Functional-Style Programming</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec15">6.15 Objects Natural Case Study: C++ Standard Library Class Template vector</a></p>&#13;
<p class="tocsec"><a href="ch06.xhtml#ch06lev1sec16">6.16 Wrap-Up</a></p>&#13;
<p class="tocchap1"><a href="ch07.xhtml#ch07">Chapter 7. (Downplaying) Pointers in Modern C++</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec1">7.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec2">7.2 Pointer Variable Declarations and Initialization</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec3">7.3 Pointer Operators</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec4">7.4 Pass-by-Reference with Pointers</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec5">7.5 Built-In Arrays</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec6">7.6 C++20: Using <code>to_array</code> to convert a Built-in Array to a <code>std::array</code></a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec7">7.7 Using <code>const</code> with Pointers and the Data They Point To</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec8">7.8 <code>sizeof</code> Operator</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec9">7.9 Pointer Expressions and Pointer Arithmetic</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec10">7.10 Objects Natural Case Study: C++20 <code>span</code>s—Views of Contiguous Container Elements</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec11">7.11 A Brief Intro to Pointer-Based Strings</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec12">7.12 Looking Ahead to Other Pointer Topics</a></p>&#13;
<p class="tocsec"><a href="ch07.xhtml#ch07lev1sec13">7.13 Wrap-Up</a></p>&#13;
<p class="tocchap1"><a href="ch08.xhtml#ch08">Chapter 8. <code>string</code>s, <code>string_view</code>s, Text Files, CSV Files and Regex</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec1">8.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec2">8.2 <code>string</code> Assignment and Concatenation</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec3">8.3 Comparing <code>string</code>s</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec4">8.4 Substrings</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec5">8.5 Swapping <code>string</code>s</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec6">8.6 <code>string</code> Characteristics</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec7">8.7 Finding Substrings and Characters in a <code>string</code></a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec8">8.8 Replacing Characters in a <code>string</code></a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec9">8.9 Inserting Characters into a <code>string</code></a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec10">8.10 C++11 Numeric Conversions</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec11">8.11 C++17 <code>string_view</code></a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec12">8.12 Files and Streams</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec13">8.13 Creating a Sequential File</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec14">8.14 Reading Data from a Sequential File</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec15">8.15 C++14 Reading and Writing Quoted Text</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec16">8.16 Updating Sequential Files</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec17">8.17 String Stream Processing</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec18">8.18 Raw String Literals</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec19">8.19 Objects Natural Case Study: Reading and Analyzing a CSV File Containing Titanic Disaster Data</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec20">8.20 Objects Natural Case Study: Introduction to Regular Expressions</a></p>&#13;
<p class="tocsec"><a href="ch08.xhtml#ch08lev1sec21">8.21 Wrap-Up</a></p>&#13;
<p class="tocpart"><a href="part3.xhtml#part3">Part 3: Object-Oriented Programming</a></p>&#13;
<p class="tocchap1"><a href="ch09.xhtml#ch09">Chapter 9. Custom Classes</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec1">9.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec2">9.2 Test-Driving an Account Object</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec3">9.3 Account Class with a Data Member and Set and Get Member Functions</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec4">9.4 Account Class: Custom Constructors</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec5">9.5 Software Engineering with Set and Get Member Functions</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec6">9.6 Account Class with a Balance</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec7">9.7 Time Class Case Study: Separating Interface from Implementation</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec8">9.8 Compilation and Linking Process</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec9">9.9 Class Scope and Accessing Class Members</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec10">9.10 Access Functions and Utility Functions</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec11">9.11 Time Class Case Study: Constructors with Default Arguments</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec12">9.12 Destructors</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec13">9.13 When Constructors and Destructors Are Called</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec14">9.14 Time Class Case Study: A Subtle Trap—Returning a Reference or a Pointer to a private Data Member</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec15">9.15 Default Assignment Operator</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec16">9.16 const Objects and const Member Functions</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec17">9.17 Composition: Objects as Members of Classes</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec18">9.18 friend Functions and friend Classes</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec19">9.19 The this Pointer</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec20">9.20 static Class Members—Classwide Data and Member Functions</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec21">9.21 Aggregates in C++20</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec22">9.22 Objects Natural Case Study: Serialization with JSON</a></p>&#13;
<p class="tocsec"><a href="ch09.xhtml#ch09lev1sec23">9.23 Wrap-Up</a></p>&#13;
<p class="tocchap1"><a href="ch10.xhtml#ch10">Chapter 10. OOP: Inheritance and Runtime Polymorphism</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_1">10.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_2">10.2 Base Classes and Derived Classes</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_3">10.3 Relationship between Base and Derived Classes</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_4">10.4 Constructors and Destructors in Derived Classes</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_5">10.5 Intro to Runtime Polymorphism: Polymorphic Video Game</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_6">10.6 Relationships Among Objects in an Inheritance Hierarchy</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_7">10.7 Virtual Functions and Virtual Destructors</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_8">10.8 Abstract Classes and Pure virtual Functions</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_9">10.9 Case Study: Payroll System Using Runtime Polymorphism</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_10">10.10 Runtime Polymorphism, Virtual Functions and Dynamic Binding “Under the Hood”</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_11">10.11 Non-Virtual Interface (NVI) Idiom</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_12">10.12 Program to an Interface, Not an Implementation</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_13">10.13 Runtime Polymorphism with std::variant and std::visit</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_14">10.14 Multiple Inheritance</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_15">10.15 protected Class Members</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_16">10.16 public, protected and private Inheritance</a></p>&#13;
<p class="tocsec"><a href="ch10.xhtml#sec10_17">10.17 Wrap-Up</a></p>&#13;
<p class="tocchap1"><a href="ch11.xhtml#ch11">Chapter 11. Operator Overloading, Copy/Move Semantics and Smart Pointers</a></p>&#13;
<p class="tocsec"><a href="ch11.xhtml#sec11_1">11.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch11.xhtml#sec11_2">11.2 Using the Overloaded Operators of Standard Library Class string</a></p>&#13;
<p class="tocsec"><a href="ch11.xhtml#sec11_3">11.3 Operator Overloading Fundamentals</a></p>&#13;
<p class="tocsec"><a href="ch11.xhtml#sec11_4">11.4 (Downplaying) Dynamic Memory Management with new and delete</a></p>&#13;
<p class="tocsec"><a href="ch11.xhtml#sec11_5">11.5 Modern C++ Dynamic Memory Management—RAII and Smart Pointers</a></p>&#13;
<p class="tocsec"><a href="ch11.xhtml#sec11_6">11.6 MyArray Case Study: Crafting a Valuable Class with Operator Overloading</a></p>&#13;
<p class="tocsec"><a href="ch11.xhtml#sec11_7">11.7 C++20 Three-Way Comparison Operator (&lt;=&gt;)</a></p>&#13;
<p class="tocsec"><a href="ch11.xhtml#sec11_8">11.8 Converting Between Types</a></p>&#13;
<p class="tocsec"><a href="ch11.xhtml#sec11_9">11.9 explicit Constructors and Conversion Operators</a></p>&#13;
<p class="tocsec"><a href="ch11.xhtml#sec11_10">11.10 Overloading the Function Call Operator ()</a></p>&#13;
<p class="tocsec"><a href="ch11.xhtml#sec11_11">11.11 Wrap-Up</a></p>&#13;
<p class="tocchap1"><a href="ch12.xhtml#ch12">Chapter 12. Exceptions and a Look Forward to Contracts</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_1">12.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_2">12.2 Exception-Handling Flow of Control; Defining an Exception Class</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_3">12.3 Exception Safety Guarantees and noexcept</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_4">12.4 Rethrowing an Exception</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_5">12.5 Stack Unwinding and Uncaught Exceptions</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_6">12.6 When to Use Exception Handling</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_7">12.7 Constructors, Destructors and Exception Handling</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_8">12.8 Processing new Failures</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_9">12.9 Standard Library Exception Hierarchy</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_10">12.10 C++’s Alternative to the finally Block</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_11">12.11 Libraries Often Support Both Exceptions and Error Codes</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_12">12.12 Logging</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_13">12.13 Looking Ahead to Contracts</a></p>&#13;
<p class="tocsec"><a href="ch12.xhtml#sec12_14">12.14 Wrap-Up</a></p>&#13;
<p class="tocpart"><a href="part4.xhtml#part4">Part 4: Standard Library Containers, Iterators and Algorithms</a></p>&#13;
<p class="tocchap1"><a href="ch13.xhtml#ch13">Chapter 13. Standard Library Containers and Iterators</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_1">13.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_2">13.2 Introduction to Containers</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_3">13.3 Working with Iterators</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_4">13.4 A Brief Introduction to Algorithms</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_5">13.5 Sequence Containers</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_6">13.6 vector Sequence Container</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_7">13.7 list Sequence Container</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_8">13.8 deque Sequence Container</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_9">13.9 Associative Containers</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_10">13.10 Container Adaptors</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_11">13.11 bitset Near Container</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_12">13.12 Optional: A Brief Intro to Big O</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_13">13.13 Optional: A Brief Intro to Hash Tables</a></p>&#13;
<p class="tocsec"><a href="ch13.xhtml#sec13_14">13.14 Wrap-Up</a></p>&#13;
<p class="tocchap1"><a href="ch14.xhtml#ch14">Chapter 14. Standard Library Algorithms and C++20 Ranges &amp; Views</a></p>&#13;
<p class="tocsec"><a href="ch14.xhtml#sec14_1">14.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch14.xhtml#sec14_2">14.2 Algorithm Requirements: C++20 Concepts</a></p>&#13;
<p class="tocsec"><a href="ch14.xhtml#sec14_3">14.3 Lambdas and Algorithms</a></p>&#13;
<p class="tocsec"><a href="ch14.xhtml#sec14_4">14.4 Algorithms</a></p>&#13;
<p class="tocsec"><a href="ch14.xhtml#sec14_5">14.5 Function Objects (Functors)</a></p>&#13;
<p class="tocsec"><a href="ch14.xhtml#sec14_6">14.6 Projections</a></p>&#13;
<p class="tocsec"><a href="ch14.xhtml#sec14_7">14.7 C++20 Views and Functional-Style Programming</a></p>&#13;
<p class="tocsec"><a href="ch14.xhtml#sec14_8">14.8 Intro to Parallel Algorithms</a></p>&#13;
<p class="tocsec"><a href="ch14.xhtml#sec14_9">14.9 Standard Library Algorithm Summary</a></p>&#13;
<p class="tocsec"><a href="ch14.xhtml#sec14_10">14.10 A Look Ahead to C++23 Ranges</a></p>&#13;
<p class="tocsec"><a href="ch14.xhtml#sec14_11">14.11 Wrap-Up</a></p>&#13;
<p class="tocpart"><a href="part5.xhtml#part5">Part 5: Advanced Topics</a></p>&#13;
<p class="tocchap1"><a href="ch15.xhtml#ch15">Chapter 15. Templates, C++20 Concepts and Metaprogramming</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_1">15.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_2">15.2 Custom Class Templates and Compile-Time Polymorphism</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_3">15.3 C++20 Function Template Enhancements</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_4">15.4 C++20 Concepts: A First Look</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_5">15.5 Type Traits</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_6">15.6 C++20 Concepts: A Deeper Look</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_7">15.7 Testing C++20 Concepts with static_assert</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_8">15.8 Creating a Custom Algorithm</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_9">15.9 Creating a Custom Container and Iterators</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_10">15.10 Default Arguments for Template Type Parameters</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_11">15.11 Variable Templates</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_12">15.12 Variadic Templates and Fold Expressions</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_13">15.13 Template Metaprogramming</a></p>&#13;
<p class="tocsec"><a href="ch15.xhtml#sec15_14">15.14 Wrap-Up</a></p>&#13;
<p class="tocchap1"><a href="ch16.xhtml#ch16">Chapter 16. C++20 Modules: Large-Scale Development</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_1">16.1 Introduction</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_2">16.2 Compilation and Linking Prior to C++20</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_3">16.3 Advantages and Goals of Modules</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_4">16.4 Example: Transitioning to Modules—Header Units</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_5">16.5 Example: Creating and Using a Module</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_6">16.6 Global Module Fragment</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_7">16.7 Separating Interface from Implementation</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_8">16.8 Partitions</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_9">16.9 Additional Modules Examples</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_10">16.10 Modules Can Reduce Translation Unit Sizes and Compilation Times</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_11">16.11 Migrating Code to Modules</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_12">16.12 Future of Modules and Modules Tooling</a></p>&#13;
<p class="tocsec"><a href="ch16.xhtml#sec16_13">16.13 Wrap-Up</a></p>&#13;
<p class="tocchap"><a href="ch17.xhtml#ch17">Chapter 17. Concurrent Programming; Intro to C++20 Coroutines</a></p>&#13;
<p class="tocpart"><a href="part6.xhtml#part6">Part 6: Other Topics</a></p>&#13;
<p class="tocchap1"><a href="ch18.xhtml#ch18">Chapter 18. Stream I/O; C++20 Text Formatting: A Deeper Look</a></p>&#13;
<p class="tocchap1"><a href="ch19.xhtml#ch19">Chapter 19. Other Topics; A Look Toward C++23 and Contracts</a></p>&#13;
<p class="tocpart"><a href="part7.xhtml#part7">Part 7: Appendices</a></p>&#13;
<p class="tocchap1"><a href="app01.xhtml#app01">Appendix A: Operator Precedence and Grouping</a></p>&#13;
<p class="tocchap1"><a href="app02.xhtml#app02">Appendix B: Character Set</a></p>&#13;
<p class="tocchap1"><a href="app03.xhtml#app03">Appendix C: Fundamental Types</a></p>&#13;
<p class="tocchap1"><a href="app04.xhtml#app04">Appendix D: Number Systems</a></p>&#13;
<p class="tocchap1"><a href="app05.xhtml#app05">Appendix E: Preprocessor</a></p>&#13;
<p class="tocchap1"><a href="app06.xhtml#app06">Appendix F: Bits, Characters, C Strings and structs</a></p>&#13;
<p class="tocchap1"><a href="app07.xhtml#app07">Appendix G: C Legacy Code Topics</a></p>&#13;
<p class="tocchap1"><a href="app08.xhtml#app08">Appendix H: Using the Visual Studio Debugger</a></p>&#13;
<p class="tocchap1"><a href="app09.xhtml#app09">Appendix I: Using the GNU C++ Debugger</a></p>&#13;
<p class="tocchap1"><a href="app10.xhtml#app10">Appendix J: Using the Xcode Debugger</a></p>&#13;
</div></body>
</html>